import { createThrottled } from './throttled.js';

test('throttled', () => {
  jest.useFakeTimers();
  const callback = jest.fn();
  const throttled = createThrottled(100, callback);
  throttled(1);
  expect(callback).toHaveBeenCalledTimes(1);
  expect(callback).toHaveBeenLastCalledWith(1);
  jest.runAllTimers();
  expect(callback).toHaveBeenCalledTimes(1);
  throttled(2);
  expect(callback).toHaveBeenCalledTimes(2);
  expect(callback).toHaveBeenLastCalledWith(2);
  throttled(3);
  jest.advanceTimersByTime(99);
  throttled(4);
  expect(callback).toHaveBeenCalledTimes(2);
  jest.advanceTimersByTime(1);
  expect(callback).toHaveBeenCalledTimes(3);
  expect(callback).toHaveBeenLastCalledWith(4);
  throttled(5);
  expect(callback).toHaveBeenCalledTimes(3);
  throttled.flush();
  expect(callback).toHaveBeenCalledTimes(4);
  expect(callback).toHaveBeenLastCalledWith(5);
  throttled(6);
  expect(callback).toHaveBeenCalledTimes(4);
  throttled.cancel();
  jest.runAllTimers();
  expect(callback).toHaveBeenCalledTimes(4);
  throttled(7);
  expect(callback).toHaveBeenCalledTimes(5);
  expect(callback).toHaveBeenLastCalledWith(7);
  throttled(8);
  expect(callback).toHaveBeenCalledTimes(5);
  throttled.cancel();
  throttled(9);
  jest.advanceTimersByTime(100);
  expect(callback).toHaveBeenCalledTimes(6);
  expect(callback).toHaveBeenLastCalledWith(9);
});
